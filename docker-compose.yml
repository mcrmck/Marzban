services:
  marzban-panel: # Your existing Marzban panel service
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file: .env # Contains panel-specific configs like database URL, etc.
    ports:
      - "8000:8000" # Panel's web interface and API
    volumes:
      - marzban_data:/var/lib/marzban # Persistent storage for panel's database (db.sqlite3)
      # This volume is for the panel's own HTTPS certs, or where it might load its client cert/key for mTLS
      # Ensure your panel code is configured to load its client.crt and client.key from an appropriate path.
      - ./MyMarzbanCA.pem:/etc/marzban/MyMarzbanCA.pem:ro
      - ./panel-certs:/etc/marzban/panel-client-certs:ro # Example mount for panel's client certs
      - ./xray-config.json:/etc/marzban/xray.json:ro # Mount XRay configuration
    environment:
      - XRAY_CONFIG_PATH=/etc/marzban/xray.json
      - UVICORN_SSL_CA_TYPE=private
      - UVICORN_HOST=0.0.0.0
      - UVICORN_PORT=8000
      - DATABASE_URL=sqlite:////var/lib/marzban/db.sqlite3
    command: ["sh", "-c", "cat /etc/marzban/xray.json && echo 'Starting Marzban...' && /entrypoint.sh"]
    networks:
      - marzban_network

  marzban-node-1:
    build: # MODIFIED section for marzban-node-1
      context: ./node  # Points to your local node/ directory
      dockerfile: Dockerfile # Uses the Dockerfile inside your node/ directory (node/Dockerfile)
    restart: always
    env_file: .env.node1 # All node-specific environment variables are now in .env.node1 (at project root)
    ports:
      # Expose Xray's actual proxy ports (e.g., VLESS/VMess/Trojan inbounds)
      # These depend on your Xray config template managed by the panel.
      # Example: if your template has an inbound on 443 and 80
      - "443:443"
      - "80:80"
      # Add other ports your Xray inbounds will use
    volumes:
      # Mounts your generated server.crt, server.key, and ca.crt into the container
      # ./node1-certs/ on your host (project_root/node1-certs/) should contain:
      #   - server.crt (Node's server certificate)
      #   - server.key (Node's server private key)
      #   - ca.crt     (The CA certificate that signed the panel's client.crt)
      - ./node1-certs:/etc/marzban-node/certs:ro # Mount as read-only (path is relative to project root)
    networks:
      - marzban_network
    # depends_on: # Optional: Can be useful for controlling startup order
    #   - marzban-panel

networks:
  marzban_network:
    driver: bridge

volumes:
  marzban_data: # Define the named volume for panel data